DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_FeedbackCenter_ProductListAll
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_FeedbackCenter_ProductListAll
	@ModuleID int
AS

SET NOCOUNT ON
DECLARE @level int, @line int, @current int, @ParentProductID int

SET @ParentProductID = -1

DECLARE @hierarchy TABLE(HierarchyID int IDENTITY (1,1), ProductID int, level int)
DECLARE  @stack TABLE(item int, level int)
INSERT INTO @stack VALUES (@ParentProductID, 1)
SELECT @level = 1
 
WHILE @level > 0
BEGIN
   IF EXISTS (SELECT * FROM @stack WHERE level = @level)
	  BEGIN
		 SELECT @current = item
		 FROM @stack
		 WHERE level = @level
 
		IF( @ParentProductID = -1 OR @ParentProductID != @current )
		BEGIN
			insert into @hierarchy(ProductID, level) values(@current, @level) 
		END
 
		 DELETE FROM @stack
		 WHERE level = @level
			AND item = @current
 
		 INSERT @stack
			SELECT Product.ProductID, @level + 1
			FROM {databaseOwner}{objectQualifier}DnnForge_FeedbackCenter_Product Product
			WHERE Product.ParentID = @current and ModuleID = @ModuleID 
			ORDER BY [Name] DESC
 
		 IF @@ROWCOUNT > 0
			SELECT @level = @level + 1
	  END
   ELSE
	  SELECT @level = @level - 1
END -- WHILE
 
SELECT
	Product.[ProductID],
	[ModuleID],
	[IsActive],
	[ParentID],
	[Email], 
	[InheritSecurity], 
	REPLICATE('.',(level-2)*2) + Product.[Name] as 'Name' 
FROM 
	{databaseOwner}{objectQualifier}DnnForge_FeedbackCenter_Product Product, @hierarchy h
WHERE 
	h.ProductID = Product.ProductID
	AND
	Product.[ModuleID] = @ModuleID
ORDER BY 
	h.HierarchyID ASC
GO
