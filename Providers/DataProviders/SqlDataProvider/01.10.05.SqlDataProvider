DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_FeedbackCenter_FeedbackList
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_FeedbackCenter_FeedbackList 
	@ModuleID int,
	@ProductID int,
	@IsClosed bit,
	@Keywords nvarchar(255),
	@SortOrder int, 
	@SortDirection int, 
	@MaxCount int,
	@UserID int,
	@TrackingID int,
	@IsApproved bit,
	@ProductIDs nvarchar(max)  
AS

if( @MaxCount is not null )
begin
	SET ROWCOUNT @MaxCount 
end

DECLARE @strQuery	nvarchar(4000)
DECLARE @strWhere	nvarchar(2000)
DECLARE @strOrder	nvarchar(2000)

SELECT @strQuery = 'SELECT
	f.[FeedbackID],
	f.[ModuleID],
	f.[TypeID],
	f.[ProductID],
	f.[UserID],
	f.[IsClosed],
	f.[IsResolved],
	f.[CreateDate],
	f.[Title],
	f.[Details],
	f.[VoteTotal], 
	f.[VoteTotalNegative], 
	f.[ClosedDate], 
	f.[AnonymousName],
	f.[AnonymousEmail],
	f.[AnonymousUrl],
	f.[IsApproved], 
	u.[UserName],
	u.[FirstName],
	u.[LastName],
	u.[DisplayName],
	p.[Name] as ''ProductName'',
	(f.[VoteTotal] - f.[VoteTotalNegative]) as ''Popularity'',
	(SELECT TOP 1 c.CreateDate FROM {databaseOwner}{objectQualifier}DnnForge_FeedbackCenter_Comment c WHERE c.FeedbackID = f.FeedbackID ORDER BY c.CreateDate DESC) as ''LastCommentDate''
FROM 	
	{databaseOwner}{objectQualifier}DnnForge_FeedbackCenter_Feedback f INNER JOIN
        {databaseOwner}{objectQualifier}DnnForge_FeedbackCenter_Product p ON f.[ProductID] = p.[ProductID] LEFT OUTER JOIN
        {databaseOwner}{objectQualifier}Users u ON f.[UserID] = u.[UserID] '

SELECT @strWhere = 'WHERE f.[ModuleID] = ' + cast(@ModuleID as nvarchar) + ' and f.[IsClosed] = ' + cast(@IsClosed as nvarchar) + ' and f.[IsApproved] = ' + cast(@IsApproved as nvarchar)

IF( @ProductID > 0 )
	SELECT @strWhere = @strWhere + ' and f.[ProductID] = ' + cast(@ProductID as nvarchar) 

IF( @Keywords is not null )
	SELECT @strWhere = @strWhere + ' and (f.[Title] like ''%' + cast(@Keywords as nvarchar) + '%'' or f.[Details] like ''%' + cast(@Keywords as nvarchar) + '%'' )'

IF( @UserID is not null )
	SELECT @strWhere = @strWhere + ' and u.[UserID] = ' + cast(@UserID as nvarchar) 
	
IF( @TrackingID is not null )
	SELECT @strWhere = @strWhere + ' and ((SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}DnnForge_FeedbackCenter_Tracking t where t.FeedbackID = f.FeedbackID and t.UserID = ' + cast(@TrackingID as nvarchar) + ') > 0) '
	
IF( @ProductIDs is not null )
	SELECT @strWhere = @strWhere + ' and f.[ProductID] IN (' + cast(@ProductIDs as nvarchar) + ')'

DECLARE @SortDir nvarchar(255)

IF( @SortDirection = 1 )
BEGIN
	SELECT @SortDir = 'ASC'
END
ELSE
BEGIN
	SELECT @SortDir = 'DESC'
END

IF( @SortOrder = 1 )
	SELECT @strOrder = ' ORDER BY (f.[VoteTotal] - f.[VoteTotalNegative]) ' + @SortDir 

IF( @SortOrder = 2 )
	SELECT @strOrder = ' ORDER BY CreateDate ' + @SortDir 

IF( @SortOrder = 3 )
	SELECT @strOrder = ' ORDER BY ClosedDate ' + @SortDir 

IF( @SortOrder = 4 )
	SELECT @strOrder = ' ORDER BY (SELECT TOP 1 c.CreateDate FROM {databaseOwner}{objectQualifier}DnnForge_FeedbackCenter_Comment c WHERE c.FeedbackID = f.FeedbackID ORDER BY c.CreateDate DESC) ' + @SortDir 

EXEC(@strQuery + @strWhere + @strOrder)
GO
